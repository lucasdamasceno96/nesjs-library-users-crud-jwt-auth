var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/controllers/AppController.html",[0,1.3,1,1.834]],["body/controllers/AppController.html",[0,1.978,1,2.791,2,1.549,3,0.567,4,0.493,5,0.493,6,2.918,7,0.493,8,1.978,9,4.324,10,1.255,11,0.04,12,0.817,13,3.555,14,1.549,15,1.443,16,0.723,17,1.016,18,2.43,19,2.918,20,0.567,21,0.074,22,2.499,23,1.936,24,1.393,25,3.555,26,0.031,27,0.031]],["title/modules/AppModule.html",[28,1.45,29,1.834]],["body/modules/AppModule.html",[1,2.73,2,1.688,3,0.447,4,0.389,5,0.389,11,0.041,16,0.85,17,0.801,18,2.527,19,2.3,20,0.447,21,0.058,26,0.026,27,0.026,28,1.883,29,3.433,30,1.361,31,1.883,32,2.3,33,2.3,34,2.3,35,2.527,36,2.832,37,2.382,38,1.723,39,1.723,40,2.802,41,2.723,42,2.723,43,2.802,44,2.802,45,2.802,46,1.969,47,1.969,48,0.989,49,2.802,50,2.802,51,2.802,52,2.802,53,2.802,54,1.723,55,2.802]],["title/injectables/AppService.html",[18,1.45,56,1.053]],["body/injectables/AppService.html",[3,0.6,4,0.522,5,0.522,7,0.522,8,2.051,9,4.416,11,0.04,12,0.865,14,1.641,15,1.496,16,0.6,17,1.077,18,2.287,20,0.6,21,0.078,24,1.475,26,0.032,27,0.032,56,1.661,57,2.05,58,3.09,59,3.765,60,3.765,61,3.765]],["title/controllers/AuthController.html",[0,1.3,62,1.834]],["body/controllers/AuthController.html",[0,1.221,2,1.221,3,0.447,4,0.389,5,0.389,7,0.389,8,1.688,10,1.367,11,0.041,12,0.89,14,1.688,16,0.764,17,0.801,20,0.447,21,0.058,22,1.969,24,1.518,26,0.026,27,0.026,62,2.382,63,2.3,64,2.3,65,2.802,66,3.18,67,3.18,68,2.3,69,2.832,70,3.874,71,2.802,72,2.109,73,1.367,74,0.995,75,2.109,76,2.946,77,2.3,78,2.832,79,3.874,80,2.802,81,2.3,82,2.3,83,2.158,84,2.3,85,2.3,86,2.3,87,2.802,88,2.802,89,2.802,90,2.802,91,2.802]],["title/modules/AuthModule.html",[28,1.45,35,1.45]],["body/modules/AuthModule.html",[2,1.52,3,0.385,4,0.335,5,0.335,11,0.041,16,0.863,17,0.691,20,0.385,21,0.05,24,0.947,26,0.024,27,0.024,28,1.695,30,1.174,31,1.695,35,2.59,37,2.145,38,1.485,39,1.485,41,2.452,42,1.698,46,1.698,47,1.698,48,0.852,62,2.518,73,0.852,83,2.408,84,1.983,92,1.983,93,1.983,94,1.983,95,3.016,96,2.415,97,3.488,98,2.415,99,2.145,100,1.698,101,3.488,102,1.485,103,2.415,104,1.698,105,4.094,106,3.488,107,2.415,108,2.415,109,2.415,110,2.415,111,1.698,112,2.415,113,2.415,114,2.415,115,2.415,116,2.415,117,2.415,118,2.415,119,2.415,120,1.983,121,1.053,122,1.485]],["title/injectables/AuthService.html",[56,1.053,83,1.45]],["body/injectables/AuthService.html",[3,0.308,4,0.269,5,0.269,7,0.269,8,1.289,11,0.041,12,0.825,14,1.289,16,0.781,17,0.553,20,0.308,21,0.04,24,1.159,26,0.02,27,0.02,48,0.683,56,1.044,57,1.054,66,2.429,67,2.429,68,2.429,69,2.487,72,1.955,73,1.529,74,0.922,75,1.955,76,2.472,77,2.429,78,2.487,83,1.438,85,1.589,86,1.589,100,1.36,104,1.36,121,1.752,123,1.589,124,2.809,125,2.08,126,1.589,127,3.301,128,4.753,129,1.935,130,2.429,131,1.935,132,1.935,133,1.589,134,1.36,135,1.19,136,1.935,137,1.589,138,1.589,139,2.08,140,2.669,141,2.809,142,2.664,143,2.958,144,2.827,145,1.935,146,1.935,147,1.935,148,4.021,149,2.958,150,2.08,151,2.958,152,1.935,153,2.08,154,1.819,155,2.958,156,2.958,157,1.935,158,1.935]],["title/classes/Book.html",[21,0.062,159,1.45]],["body/classes/Book.html",[3,0.417,4,0.363,5,0.363,7,0.363,10,1.73,11,0.041,12,1.126,15,1.617,16,0.588,20,0.682,21,0.054,26,0.025,27,0.025,48,0.922,54,1.607,74,1.259,121,1.139,122,2.269,140,1.423,159,1.793,160,1.139,161,1.607,162,1.446,163,2.329,164,3.128,165,2.329,166,3.007,167,2.63,168,4.57,169,2.614,170,2.614,171,2.614,172,2.594,173,2.614,174,2.614,175,2.146,176,2.614,177,2.614,178,3.029,179,2.146,180,2.146,181,3.029,182,3.029,183,2.146,184,1.607,185,2.146]],["title/controllers/BookController.html",[0,1.3,186,1.834]],["body/controllers/BookController.html",[0,0.783,2,0.783,3,0.286,4,0.249,5,0.249,7,0.249,8,1.217,10,1.478,11,0.041,12,0.962,14,1.825,15,1.562,16,0.738,17,0.514,20,0.286,21,0.037,22,1.263,24,1.641,26,0.019,27,0.019,64,1.475,72,2.28,73,1.478,74,1.075,75,2.28,76,3.089,81,2.813,82,2.293,102,1.105,124,3.309,159,2.249,186,1.717,187,1.475,188,1.475,189,3.427,190,3.427,191,2.793,192,3.427,193,3.427,194,1.796,195,2.377,196,1.796,197,1.796,198,1.796,199,2.793,200,1.796,201,3.639,202,1.796,203,3.866,204,1.796,205,3.174,206,1.796,207,2.793,208,1.796,209,1.796,210,2.377,211,2.793,212,1.796,213,1.796,214,1.796,215,1.796,216,1.796,217,1.665,218,1.475,219,0.978,220,1.796,221,2.793,222,1.796,223,1.263,224,1.475,225,1.475,226,1.475,227,1.796,228,1.796,229,1.796,230,1.796,231,3.427,232,1.796,233,1.796,234,1.796,235,1.796,236,1.796]],["title/modules/BookModule.html",[28,1.45,36,1.625]],["body/modules/BookModule.html",[2,1.756,3,0.473,4,0.412,5,0.412,11,0.041,16,0.844,17,0.849,20,0.473,21,0.062,26,0.027,27,0.027,28,1.958,30,1.442,31,1.958,35,2.572,36,2.999,37,2.478,38,1.825,39,1.825,41,2.833,42,2.833,47,2.086,48,1.047,73,1.047,120,2.436,122,1.825,159,1.442,184,2.478,186,2.813,217,2.572,218,2.436,219,1.616,237,2.436,238,2.968,239,2.436,240,2.968,241,2.968,242,2.968]],["title/injectables/BookService.html",[56,1.053,217,1.45]],["body/injectables/BookService.html",[3,0.259,4,0.226,5,0.226,7,0.226,8,1.125,11,0.041,12,0.976,14,1.74,15,1.514,16,0.636,17,0.465,20,0.259,21,0.034,24,1.565,26,0.018,27,0.018,48,0.574,54,1.588,56,0.911,57,0.885,72,2.314,73,1.5,74,1.091,75,2.314,76,3,124,3.241,125,1.815,134,1.143,135,1.588,139,1.143,140,2.517,144,2.806,150,1.143,153,1.815,154,1.975,159,2.561,167,1,188,2.12,201,2.637,205,3.277,217,1.255,219,0.885,223,1.143,224,1.334,225,1.334,226,1.334,243,1.334,244,2.582,245,2.582,246,2.582,247,2.582,248,2.582,249,1.626,250,3.212,251,1.626,252,2.582,253,2.582,254,1.626,255,2.582,256,1.626,257,2.582,258,1.626,259,2.582,260,1.626,261,2.582,262,1.626,263,1.626,264,1.626,265,1.626,266,2.582,267,1.626,268,2.582,269,1.626,270,2.582,271,1.626,272,2.582,273,2.582,274,1.626,275,1.626,276,1.626,277,1.626,278,1.626,279,1.626,280,2.582,281,1.626,282,2.582,283,1.626,284,1.626,285,0.885,286,0.885,287,1.626,288,1.626,289,1.626,290,1.626,291,1.626,292,1.626]],["title/classes/CreateBookDto.html",[21,0.062,195,1.834]],["body/classes/CreateBookDto.html",[3,0.393,4,0.342,5,0.342,7,0.342,10,1.692,11,0.04,12,1.102,15,1.586,16,0.564,20,0.393,21,0.074,23,3.098,26,0.024,27,0.024,74,1.231,160,1.075,162,1.388,163,2.256,164,3.234,165,2.256,166,2.912,167,2.547,172,2.489,195,2.177,219,1.343,285,1.928,286,1.928,293,4.097,294,1.734,295,3.401,296,2.025,297,2.466,298,2.177,299,1.928,300,2.907,301,2.025,302,2.025,303,2.466,304,2.025,305,2.025,306,2.025,307,3.509,308,2.907,309,2.784,310,1.343,311,2.025]],["title/injectables/JwtStrategy.html",[56,1.053,95,1.625]],["body/injectables/JwtStrategy.html",[3,0.417,4,0.363,5,0.363,7,0.363,8,1.608,11,0.041,12,0.848,14,1.139,16,0.811,17,0.747,20,0.417,21,0.054,24,1.024,26,0.025,27,0.025,48,0.922,56,1.302,57,1.423,72,2.009,73,1.302,74,0.671,75,2.009,95,2.009,100,1.837,102,1.607,111,1.837,121,2.025,124,2.63,125,2.594,126,2.146,127,3.815,130,3.029,133,2.146,134,1.837,135,1.607,138,2.146,139,1.837,140,2.009,144,1.837,150,1.837,153,1.837,154,1.607,312,2.146,313,3.69,314,2.614,315,3.69,316,2.614,317,3.69,318,2.614,319,2.614,320,2.614,321,2.614,322,2.146,323,2.614,324,2.614,325,2.614,326,2.614,327,2.614,328,2.614,329,2.614,330,2.614,331,2.614,332,2.614,333,2.614,334,2.614]],["title/classes/LoginDto.html",[21,0.062,69,1.625]],["body/classes/LoginDto.html",[3,0.505,4,0.44,5,0.44,7,0.44,10,1.486,11,0.039,12,0.968,15,1.602,16,0.505,20,0.505,21,0.088,23,2.937,26,0.029,27,0.029,69,2.293,74,1.081,141,3.226,142,2.908,160,1.381,162,1.651,285,2.293,286,2.293,298,2.589,299,2.293,307,3.325,309,2.589,310,1.726,335,2.601,336,2.601,337,3.169,338,2.601,339,3.169,340,3.457,341,2.601,342,2.601]],["title/classes/SignUpDto.html",[21,0.062,78,1.625]],["body/classes/SignUpDto.html",[3,0.469,4,0.408,5,0.408,7,0.408,10,1.608,11,0.04,12,1.047,15,1.678,16,0.469,20,0.469,21,0.083,23,3.035,26,0.027,27,0.027,73,1.608,74,1.17,78,2.182,141,3.146,142,2.801,160,1.282,162,1.57,285,2.182,286,2.182,295,2.416,298,2.464,299,2.182,307,3.438,309,2.801,310,1.602,336,2.416,338,2.416,340,3.289,341,2.416,342,2.416,343,2.416,344,2.943,345,2.943,346,2.943]],["title/classes/UpdateBookDto.html",[21,0.062,210,1.834]],["body/classes/UpdateBookDto.html",[3,0.393,4,0.342,5,0.342,7,0.342,10,1.692,11,0.04,12,1.102,15,1.586,16,0.564,20,0.393,21,0.074,23,3.098,26,0.024,27,0.024,74,1.231,160,1.075,162,1.388,163,2.256,164,3.234,165,2.256,166,2.912,167,2.547,172,2.489,210,2.177,219,1.343,285,1.928,286,1.928,294,1.734,296,2.025,298,2.177,299,1.928,300,2.907,301,2.025,302,2.025,304,2.025,305,2.025,306,2.025,308,2.907,309,2.784,310,1.343,311,2.025,347,4.097,348,4.143,349,2.466,350,2.466,351,4.991]],["title/classes/User.html",[21,0.062,121,1.3]],["body/classes/User.html",[3,0.494,4,0.43,5,0.43,7,0.43,10,1.651,11,0.04,12,1.075,15,1.704,16,0.494,20,0.661,21,0.065,26,0.028,27,0.028,48,1.094,54,2.551,73,1.651,74,1.201,99,1.905,121,1.808,122,2.551,140,1.687,141,3.072,142,2.876,160,1.35,162,1.626,168,4.4,175,2.544,183,2.544,352,2.178,353,3.099,354,3.099,355,3.099,356,3.099,357,3.099,358,3.099,359,3.099,360,2.544]],["title/coverage.html",[361,2.843]],["body/coverage.html",[0,1.903,1,1.669,5,0.377,6,2.229,11,0.04,18,1.319,21,0.107,26,0.026,27,0.026,56,1.668,58,2.229,62,1.669,63,2.229,69,1.478,74,0.697,78,1.478,83,1.319,95,1.478,99,1.669,121,1.183,123,2.229,154,1.669,159,1.319,161,2.33,184,1.669,186,1.669,187,2.229,195,1.669,210,1.669,217,1.319,243,2.229,293,2.229,294,2.664,312,2.229,335,2.229,343,2.229,347,2.229,352,2.664,361,1.908,362,2.715,363,2.715,364,2.715,365,5.8,366,3.79,367,4.367,368,4.367,369,3.79,370,4.367,371,4.726,372,2.715,373,2.229,374,2.715,375,2.229,376,2.715,377,2.715]],["title/dependencies.html",[31,1.74,378,2.056]],["body/dependencies.html",[11,0.041,17,0.991,21,0.093,26,0.03,27,0.03,31,1.685,46,2.437,48,1.224,102,2.132,104,2.437,111,2.437,135,2.132,137,2.846,223,2.437,310,1.888,322,3.666,379,4.941,380,3.467,381,3.467,382,3.467,383,3.467,384,3.467,385,3.467,386,3.467,387,3.467,388,3.467,389,3.467,390,3.467,391,3.467,392,3.467,393,3.467,394,3.467,395,3.467,396,3.467,397,3.467]],["title/miscellaneous/enumerations.html",[398,1.217,399,2.939]],["body/miscellaneous/enumerations.html",[7,0.558,11,0.039,26,0.033,27,0.033,161,2.474,164,3.015,178,4.026,179,3.303,180,3.303,181,4.026,182,4.026,398,1.955,399,3.303,400,3.303,401,4.52]],["title/miscellaneous/functions.html",[398,1.217,402,2.939]],["body/miscellaneous/functions.html",[7,0.611,11,0.035,26,0.035,27,0.035,373,3.615,375,4.512,398,2.14,402,3.615,403,4.403]],["title/index.html",[7,0.348,404,2.505,405,2.505]],["body/index.html",[4,0.4,11,0.04,26,0.027,27,0.027,163,1.569,165,1.569,299,1.569,361,2.026,406,2.882,407,2.882,408,3.95,409,2.882,410,2.882,411,2.882,412,2.882,413,2.882,414,2.882,415,4.507,416,2.882,417,2.882,418,2.882,419,2.882,420,5.372,421,2.882,422,2.882,423,2.882,424,5.246,425,2.882,426,2.882,427,3.95,428,2.882,429,2.882,430,2.882,431,2.882,432,3.95,433,3.95,434,2.882,435,2.882,436,2.882,437,3.95,438,3.95,439,2.882,440,2.882,441,2.882,442,2.882,443,2.882,444,2.366,445,2.882,446,2.882,447,2.882,448,2.882,449,2.882,450,2.882,451,2.882,452,2.882,453,2.882,454,2.882,455,2.882,456,2.882,457,2.882,458,2.882,459,2.882,460,2.366]],["title/modules.html",[30,1.965]],["body/modules.html",[11,0.034,26,0.034,27,0.034,29,2.578,30,2.037,35,2.037,36,2.283,444,4.42,461,5.384,462,5.384,463,5.384]],["title/overview.html",[464,3.32]],["body/overview.html",[2,1.375,11,0.039,18,2.293,26,0.029,27,0.029,29,3.434,30,1.533,31,2.04,32,2.59,33,2.59,34,2.59,35,2.748,36,2.994,37,2.582,38,1.94,39,1.94,57,1.718,83,2.293,92,2.59,93,2.59,94,2.59,95,2.994,160,1.375,217,2.293,237,2.59,239,2.59,464,2.59,465,4.199,466,3.155,467,3.155]],["title/properties.html",[162,1.403,378,2.056]],["body/properties.html",[11,0.04,26,0.035,27,0.035,162,1.694,163,2.353,165,2.353,460,3.548,468,4.322,469,4.322,470,4.322]],["title/miscellaneous/variables.html",[398,1.217,471,2.939]],["body/miscellaneous/variables.html",[7,0.572,11,0.038,26,0.034,27,0.034,99,3.058,161,2.532,184,3.058,185,3.381,352,2.895,360,3.381,398,2.001,400,3.381,401,4.083,471,3.381,472,4.118,473,4.973]]],"invertedIndex":[["",{"_index":11,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/Book.html":{},"controllers/BookController.html":{},"modules/BookModule.html":{},"injectables/BookService.html":{},"classes/CreateBookDto.html":{},"injectables/JwtStrategy.html":{},"classes/LoginDto.html":{},"classes/SignUpDto.html":{},"classes/UpdateBookDto.html":{},"classes/User.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":365,"title":{},"body":{"coverage.html":{}}}],["0.0.1",{"_index":469,"title":{},"body":{"properties.html":{}}}],["0.1.13",{"_index":395,"title":{},"body":{"dependencies.html":{}}}],["0.14.0",{"_index":389,"title":{},"body":{"dependencies.html":{}}}],["0.5.1",{"_index":388,"title":{},"body":{"dependencies.html":{}}}],["0.6.0",{"_index":391,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":370,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":366,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":367,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":368,"title":{},"body":{"coverage.html":{}}}],["0/6",{"_index":371,"title":{},"body":{"coverage.html":{}}}],["0/7",{"_index":372,"title":{},"body":{"coverage.html":{}}}],["1",{"_index":270,"title":{},"body":{"injectables/BookService.html":{}}}],["10",{"_index":146,"title":{},"body":{"injectables/AuthService.html":{}}}],["10.0.3",{"_index":382,"title":{},"body":{"dependencies.html":{}}}],["2",{"_index":267,"title":{},"body":{"injectables/BookService.html":{}}}],["2.3.1",{"_index":380,"title":{},"body":{"dependencies.html":{}}}],["2.4.3",{"_index":386,"title":{},"body":{"dependencies.html":{}}}],["3",{"_index":465,"title":{},"body":{"overview.html":{}}}],["4",{"_index":466,"title":{},"body":{"overview.html":{}}}],["4.0.1",{"_index":392,"title":{},"body":{"dependencies.html":{}}}],["6",{"_index":467,"title":{},"body":{"overview.html":{}}}],["7.1.0",{"_index":390,"title":{},"body":{"dependencies.html":{}}}],["7.2.0",{"_index":397,"title":{},"body":{"dependencies.html":{}}}],["9.0.0",{"_index":379,"title":{},"body":{"dependencies.html":{}}}],["9.0.3",{"_index":384,"title":{},"body":{"dependencies.html":{}}}],["9.2.2",{"_index":383,"title":{},"body":{"dependencies.html":{}}}],["_id",{"_index":201,"title":{},"body":{"controllers/BookController.html":{},"injectables/BookService.html":{}}}],["access",{"_index":333,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["adventure",{"_index":178,"title":{},"body":{"classes/Book.html":{},"miscellaneous/enumerations.html":{}}}],["amazing",{"_index":445,"title":{},"body":{"index.html":{}}}],["app",{"_index":422,"title":{},"body":{"index.html":{}}}],["app.controller",{"_index":43,"title":{},"body":{"modules/AppModule.html":{}}}],["app.service",{"_index":19,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{}}}],["appcontroller",{"_index":1,"title":{"controllers/AppController.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"coverage.html":{}}}],["applications",{"_index":414,"title":{},"body":{"index.html":{}}}],["appmodule",{"_index":29,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["appservice",{"_index":18,"title":{"injectables/AppService.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"coverage.html":{},"overview.html":{}}}],["async",{"_index":124,"title":{},"body":{"injectables/AuthService.html":{},"controllers/BookController.html":{},"injectables/BookService.html":{},"injectables/JwtStrategy.html":{}}}],["auth",{"_index":65,"title":{},"body":{"controllers/AuthController.html":{}}}],["auth.controller",{"_index":98,"title":{},"body":{"modules/AuthModule.html":{}}}],["auth.service",{"_index":84,"title":{},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{}}}],["auth/auth.module",{"_index":49,"title":{},"body":{"modules/AppModule.html":{}}}],["authcontroller",{"_index":62,"title":{"controllers/AuthController.html":{}},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"coverage.html":{}}}],["authguard",{"_index":227,"title":{},"body":{"controllers/BookController.html":{}}}],["authmodule",{"_index":35,"title":{"modules/AuthModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/BookModule.html":{},"modules.html":{},"overview.html":{}}}],["author",{"_index":163,"title":{},"body":{"classes/Book.html":{},"classes/CreateBookDto.html":{},"classes/UpdateBookDto.html":{},"index.html":{},"properties.html":{}}}],["authservice",{"_index":83,"title":{"injectables/AuthService.html":{}},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"coverage.html":{},"overview.html":{}}}],["available",{"_index":300,"title":{},"body":{"classes/CreateBookDto.html":{},"classes/UpdateBookDto.html":{}}}],["await",{"_index":144,"title":{},"body":{"injectables/AuthService.html":{},"injectables/BookService.html":{},"injectables/JwtStrategy.html":{}}}],["backers",{"_index":446,"title":{},"body":{"index.html":{}}}],["badrequestexception",{"_index":263,"title":{},"body":{"injectables/BookService.html":{}}}],["badrequestexception('please",{"_index":284,"title":{},"body":{"injectables/BookService.html":{}}}],["bcrypt",{"_index":136,"title":{},"body":{"injectables/AuthService.html":{}}}],["bcrypt.compare(password",{"_index":157,"title":{},"body":{"injectables/AuthService.html":{}}}],["bcrypt.hash(password",{"_index":145,"title":{},"body":{"injectables/AuthService.html":{}}}],["bcryptjs",{"_index":137,"title":{},"body":{"injectables/AuthService.html":{},"dependencies.html":{}}}],["body",{"_index":81,"title":{},"body":{"controllers/AuthController.html":{},"controllers/BookController.html":{}}}],["book",{"_index":159,"title":{"classes/Book.html":{}},"body":{"classes/Book.html":{},"controllers/BookController.html":{},"modules/BookModule.html":{},"injectables/BookService.html":{},"coverage.html":{}}}],["book.controller",{"_index":241,"title":{},"body":{"modules/BookModule.html":{}}}],["book.dto",{"_index":221,"title":{},"body":{"controllers/BookController.html":{}}}],["book.dto.ts",{"_index":294,"title":{},"body":{"classes/CreateBookDto.html":{},"classes/UpdateBookDto.html":{},"coverage.html":{}}}],["book.dto.ts:11",{"_index":302,"title":{},"body":{"classes/CreateBookDto.html":{},"classes/UpdateBookDto.html":{}}}],["book.dto.ts:15",{"_index":296,"title":{},"body":{"classes/CreateBookDto.html":{},"classes/UpdateBookDto.html":{}}}],["book.dto.ts:19",{"_index":304,"title":{},"body":{"classes/CreateBookDto.html":{},"classes/UpdateBookDto.html":{}}}],["book.dto.ts:23",{"_index":301,"title":{},"body":{"classes/CreateBookDto.html":{},"classes/UpdateBookDto.html":{}}}],["book.dto.ts:7",{"_index":305,"title":{},"body":{"classes/CreateBookDto.html":{},"classes/UpdateBookDto.html":{}}}],["book.service",{"_index":218,"title":{},"body":{"controllers/BookController.html":{},"modules/BookModule.html":{}}}],["book/book.module",{"_index":44,"title":{},"body":{"modules/AppModule.html":{}}}],["bookcontroller",{"_index":186,"title":{"controllers/BookController.html":{}},"body":{"controllers/BookController.html":{},"modules/BookModule.html":{},"coverage.html":{}}}],["bookmodel",{"_index":252,"title":{},"body":{"injectables/BookService.html":{}}}],["bookmodule",{"_index":36,"title":{"modules/BookModule.html":{}},"body":{"modules/AppModule.html":{},"modules/BookModule.html":{},"modules.html":{},"overview.html":{}}}],["books",{"_index":188,"title":{},"body":{"controllers/BookController.html":{},"injectables/BookService.html":{}}}],["bookschema",{"_index":184,"title":{},"body":{"classes/Book.html":{},"modules/BookModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["bookservice",{"_index":217,"title":{"injectables/BookService.html":{}},"body":{"controllers/BookController.html":{},"modules/BookModule.html":{},"injectables/BookService.html":{},"coverage.html":{},"overview.html":{}}}],["bootstrap",{"_index":375,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["browse",{"_index":463,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":461,"title":{},"body":{"modules.html":{}}}],["building",{"_index":409,"title":{},"body":{"index.html":{}}}],["category",{"_index":164,"title":{},"body":{"classes/Book.html":{},"classes/CreateBookDto.html":{},"classes/UpdateBookDto.html":{},"miscellaneous/enumerations.html":{}}}],["class",{"_index":21,"title":{"classes/Book.html":{},"classes/CreateBookDto.html":{},"classes/LoginDto.html":{},"classes/SignUpDto.html":{},"classes/UpdateBookDto.html":{},"classes/User.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/Book.html":{},"controllers/BookController.html":{},"modules/BookModule.html":{},"injectables/BookService.html":{},"classes/CreateBookDto.html":{},"injectables/JwtStrategy.html":{},"classes/LoginDto.html":{},"classes/SignUpDto.html":{},"classes/UpdateBookDto.html":{},"classes/User.html":{},"coverage.html":{},"dependencies.html":{}}}],["classes",{"_index":160,"title":{},"body":{"classes/Book.html":{},"classes/CreateBookDto.html":{},"classes/LoginDto.html":{},"classes/SignUpDto.html":{},"classes/UpdateBookDto.html":{},"classes/User.html":{},"overview.html":{}}}],["classic",{"_index":180,"title":{},"body":{"classes/Book.html":{},"miscellaneous/enumerations.html":{}}}],["classics",{"_index":179,"title":{},"body":{"classes/Book.html":{},"miscellaneous/enumerations.html":{}}}],["cluster_appmodule",{"_index":32,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_imports",{"_index":33,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_providers",{"_index":34,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_authmodule",{"_index":92,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_authmodule_exports",{"_index":93,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_authmodule_providers",{"_index":94,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_bookmodule",{"_index":237,"title":{},"body":{"modules/BookModule.html":{},"overview.html":{}}}],["cluster_bookmodule_imports",{"_index":238,"title":{},"body":{"modules/BookModule.html":{}}}],["cluster_bookmodule_providers",{"_index":239,"title":{},"body":{"modules/BookModule.html":{},"overview.html":{}}}],["config",{"_index":106,"title":{},"body":{"modules/AuthModule.html":{}}}],["config.get('jwt_expires",{"_index":119,"title":{},"body":{"modules/AuthModule.html":{}}}],["config.get('jwt_secret",{"_index":116,"title":{},"body":{"modules/AuthModule.html":{}}}],["configmodule",{"_index":45,"title":{},"body":{"modules/AppModule.html":{}}}],["configmodule.forroot",{"_index":50,"title":{},"body":{"modules/AppModule.html":{}}}],["configservice",{"_index":105,"title":{},"body":{"modules/AuthModule.html":{}}}],["const",{"_index":140,"title":{},"body":{"injectables/AuthService.html":{},"classes/Book.html":{},"injectables/BookService.html":{},"injectables/JwtStrategy.html":{},"classes/User.html":{}}}],["constructor",{"_index":125,"title":{},"body":{"injectables/AuthService.html":{},"injectables/BookService.html":{},"injectables/JwtStrategy.html":{}}}],["constructor(bookmodel",{"_index":249,"title":{},"body":{"injectables/BookService.html":{}}}],["constructor(private",{"_index":22,"title":{},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"controllers/BookController.html":{}}}],["constructor(usermodel",{"_index":126,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{}}}],["controller",{"_index":0,"title":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"controllers/BookController.html":{}},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"controllers/BookController.html":{},"coverage.html":{}}}],["controller('auth",{"_index":87,"title":{},"body":{"controllers/AuthController.html":{}}}],["controller('books",{"_index":228,"title":{},"body":{"controllers/BookController.html":{}}}],["controllers",{"_index":2,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"controllers/BookController.html":{},"modules/BookModule.html":{},"overview.html":{}}}],["core",{"_index":226,"title":{},"body":{"controllers/BookController.html":{},"injectables/BookService.html":{}}}],["correct",{"_index":286,"title":{},"body":{"injectables/BookService.html":{},"classes/CreateBookDto.html":{},"classes/LoginDto.html":{},"classes/SignUpDto.html":{},"classes/UpdateBookDto.html":{}}}],["coverage",{"_index":361,"title":{"coverage.html":{}},"body":{"coverage.html":{},"index.html":{}}}],["create",{"_index":244,"title":{},"body":{"injectables/BookService.html":{}}}],["create(book",{"_index":253,"title":{},"body":{"injectables/BookService.html":{}}}],["createbook",{"_index":189,"title":{},"body":{"controllers/BookController.html":{}}}],["createbook(book",{"_index":194,"title":{},"body":{"controllers/BookController.html":{}}}],["createbookdto",{"_index":195,"title":{"classes/CreateBookDto.html":{}},"body":{"controllers/BookController.html":{},"classes/CreateBookDto.html":{},"coverage.html":{}}}],["crime",{"_index":181,"title":{},"body":{"classes/Book.html":{},"miscellaneous/enumerations.html":{}}}],["currentpage",{"_index":268,"title":{},"body":{"injectables/BookService.html":{}}}],["decorators",{"_index":10,"title":{},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"classes/Book.html":{},"controllers/BookController.html":{},"classes/CreateBookDto.html":{},"classes/LoginDto.html":{},"classes/SignUpDto.html":{},"classes/UpdateBookDto.html":{},"classes/User.html":{}}}],["default",{"_index":473,"title":{},"body":{"miscellaneous/variables.html":{}}}],["defaultstrategy",{"_index":110,"title":{},"body":{"modules/AuthModule.html":{}}}],["defined",{"_index":12,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/Book.html":{},"controllers/BookController.html":{},"injectables/BookService.html":{},"classes/CreateBookDto.html":{},"injectables/JwtStrategy.html":{},"classes/LoginDto.html":{},"classes/SignUpDto.html":{},"classes/UpdateBookDto.html":{},"classes/User.html":{}}}],["delete",{"_index":213,"title":{},"body":{"controllers/BookController.html":{}}}],["delete(':_id",{"_index":199,"title":{},"body":{"controllers/BookController.html":{}}}],["deletebook",{"_index":190,"title":{},"body":{"controllers/BookController.html":{}}}],["deletebook(_id",{"_index":198,"title":{},"body":{"controllers/BookController.html":{}}}],["deletebyid",{"_index":245,"title":{},"body":{"injectables/BookService.html":{}}}],["deletebyid(_id",{"_index":255,"title":{},"body":{"injectables/BookService.html":{}}}],["dependencies",{"_index":31,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/BookModule.html":{},"dependencies.html":{},"overview.html":{}}}],["description",{"_index":165,"title":{},"body":{"classes/Book.html":{},"classes/CreateBookDto.html":{},"classes/UpdateBookDto.html":{},"index.html":{},"properties.html":{}}}],["development",{"_index":423,"title":{},"body":{"index.html":{}}}],["documentation",{"_index":362,"title":{},"body":{"coverage.html":{}}}],["dto/create",{"_index":220,"title":{},"body":{"controllers/BookController.html":{}}}],["dto/login.dto",{"_index":86,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["dto/signup.dto",{"_index":85,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["dto/update",{"_index":222,"title":{},"body":{"controllers/BookController.html":{}}}],["duplicated",{"_index":359,"title":{},"body":{"classes/User.html":{}}}],["e2e",{"_index":434,"title":{},"body":{"index.html":{}}}],["efficient",{"_index":410,"title":{},"body":{"index.html":{}}}],["email",{"_index":141,"title":{},"body":{"injectables/AuthService.html":{},"classes/LoginDto.html":{},"classes/SignUpDto.html":{},"classes/User.html":{}}}],["endpoint",{"_index":334,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["enter",{"_index":285,"title":{},"body":{"injectables/BookService.html":{},"classes/CreateBookDto.html":{},"classes/LoginDto.html":{},"classes/SignUpDto.html":{},"classes/UpdateBookDto.html":{}}}],["enum",{"_index":177,"title":{},"body":{"classes/Book.html":{}}}],["enumerations",{"_index":399,"title":{"miscellaneous/enumerations.html":{}},"body":{"miscellaneous/enumerations.html":{}}}],["env",{"_index":52,"title":{},"body":{"modules/AppModule.html":{}}}],["envfilepath",{"_index":51,"title":{},"body":{"modules/AppModule.html":{}}}],["expiresin",{"_index":118,"title":{},"body":{"modules/AuthModule.html":{}}}],["export",{"_index":20,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/Book.html":{},"controllers/BookController.html":{},"modules/BookModule.html":{},"injectables/BookService.html":{},"classes/CreateBookDto.html":{},"injectables/JwtStrategy.html":{},"classes/LoginDto.html":{},"classes/SignUpDto.html":{},"classes/UpdateBookDto.html":{},"classes/User.html":{}}}],["exports",{"_index":97,"title":{},"body":{"modules/AuthModule.html":{}}}],["express",{"_index":223,"title":{},"body":{"controllers/BookController.html":{},"injectables/BookService.html":{},"dependencies.html":{}}}],["expressquery",{"_index":203,"title":{},"body":{"controllers/BookController.html":{}}}],["extends",{"_index":323,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["extractjwt",{"_index":321,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["extractjwt.fromauthheaderasbearertoken",{"_index":327,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["fantasy",{"_index":182,"title":{},"body":{"classes/Book.html":{},"miscellaneous/enumerations.html":{}}}],["file",{"_index":5,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/Book.html":{},"controllers/BookController.html":{},"modules/BookModule.html":{},"injectables/BookService.html":{},"classes/CreateBookDto.html":{},"injectables/JwtStrategy.html":{},"classes/LoginDto.html":{},"classes/SignUpDto.html":{},"classes/UpdateBookDto.html":{},"classes/User.html":{},"coverage.html":{}}}],["find",{"_index":277,"title":{},"body":{"injectables/BookService.html":{}}}],["findall",{"_index":246,"title":{},"body":{"injectables/BookService.html":{}}}],["findall(query",{"_index":257,"title":{},"body":{"injectables/BookService.html":{}}}],["findbyid",{"_index":247,"title":{},"body":{"injectables/BookService.html":{}}}],["findbyid(_id",{"_index":259,"title":{},"body":{"injectables/BookService.html":{}}}],["first",{"_index":332,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["founded",{"_index":289,"title":{},"body":{"injectables/BookService.html":{}}}],["framework",{"_index":408,"title":{},"body":{"index.html":{}}}],["function",{"_index":374,"title":{},"body":{"coverage.html":{}}}],["functions",{"_index":402,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["get('/login",{"_index":70,"title":{},"body":{"controllers/AuthController.html":{}}}],["get(':_id",{"_index":207,"title":{},"body":{"controllers/BookController.html":{}}}],["getallbooks",{"_index":191,"title":{},"body":{"controllers/BookController.html":{}}}],["getallbooks(@query",{"_index":229,"title":{},"body":{"controllers/BookController.html":{}}}],["getallbooks(query",{"_index":202,"title":{},"body":{"controllers/BookController.html":{}}}],["getbook",{"_index":192,"title":{},"body":{"controllers/BookController.html":{}}}],["getbook(_id",{"_index":206,"title":{},"body":{"controllers/BookController.html":{}}}],["gethello",{"_index":9,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{}}}],["getting",{"_index":404,"title":{"index.html":{}},"body":{}}],["grow",{"_index":441,"title":{},"body":{"index.html":{}}}],["hashedpassword",{"_index":143,"title":{},"body":{"injectables/AuthService.html":{}}}],["hello",{"_index":60,"title":{},"body":{"injectables/AppService.html":{}}}],["here",{"_index":451,"title":{},"body":{"index.html":{}}}],["https://nestjs.com",{"_index":457,"title":{},"body":{"index.html":{}}}],["id",{"_index":150,"title":{},"body":{"injectables/AuthService.html":{},"injectables/BookService.html":{},"injectables/JwtStrategy.html":{}}}],["identifier",{"_index":363,"title":{},"body":{"coverage.html":{}}}],["import",{"_index":16,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/Book.html":{},"controllers/BookController.html":{},"modules/BookModule.html":{},"injectables/BookService.html":{},"classes/CreateBookDto.html":{},"injectables/JwtStrategy.html":{},"classes/LoginDto.html":{},"classes/SignUpDto.html":{},"classes/UpdateBookDto.html":{},"classes/User.html":{}}}],["imports",{"_index":42,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/BookModule.html":{}}}],["index",{"_index":7,"title":{"index.html":{}},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/Book.html":{},"controllers/BookController.html":{},"injectables/BookService.html":{},"classes/CreateBookDto.html":{},"injectables/JwtStrategy.html":{},"classes/LoginDto.html":{},"classes/SignUpDto.html":{},"classes/UpdateBookDto.html":{},"classes/User.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["info",{"_index":3,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/Book.html":{},"controllers/BookController.html":{},"modules/BookModule.html":{},"injectables/BookService.html":{},"classes/CreateBookDto.html":{},"injectables/JwtStrategy.html":{},"classes/LoginDto.html":{},"classes/SignUpDto.html":{},"classes/UpdateBookDto.html":{},"classes/User.html":{}}}],["inject",{"_index":113,"title":{},"body":{"modules/AuthModule.html":{}}}],["injectable",{"_index":56,"title":{"injectables/AppService.html":{},"injectables/AuthService.html":{},"injectables/BookService.html":{},"injectables/JwtStrategy.html":{}},"body":{"injectables/AppService.html":{},"injectables/AuthService.html":{},"injectables/BookService.html":{},"injectables/JwtStrategy.html":{},"coverage.html":{}}}],["injectables",{"_index":57,"title":{},"body":{"injectables/AppService.html":{},"injectables/AuthService.html":{},"injectables/BookService.html":{},"injectables/JwtStrategy.html":{},"overview.html":{}}}],["injectmodel",{"_index":134,"title":{},"body":{"injectables/AuthService.html":{},"injectables/BookService.html":{},"injectables/JwtStrategy.html":{}}}],["injectmodel(book.name",{"_index":265,"title":{},"body":{"injectables/BookService.html":{}}}],["injectmodel(user.name",{"_index":138,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{}}}],["installation",{"_index":419,"title":{},"body":{"index.html":{}}}],["installrunning",{"_index":421,"title":{},"body":{"index.html":{}}}],["isemail",{"_index":340,"title":{},"body":{"classes/LoginDto.html":{},"classes/SignUpDto.html":{}}}],["isenum",{"_index":306,"title":{},"body":{"classes/CreateBookDto.html":{},"classes/UpdateBookDto.html":{}}}],["isenum(category",{"_index":311,"title":{},"body":{"classes/CreateBookDto.html":{},"classes/UpdateBookDto.html":{}}}],["isglobal",{"_index":53,"title":{},"body":{"modules/AppModule.html":{}}}],["isnotempty",{"_index":307,"title":{},"body":{"classes/CreateBookDto.html":{},"classes/LoginDto.html":{},"classes/SignUpDto.html":{}}}],["isnotempty()@isemail",{"_index":336,"title":{},"body":{"classes/LoginDto.html":{},"classes/SignUpDto.html":{}}}],["isnotempty()@isenum(category",{"_index":297,"title":{},"body":{"classes/CreateBookDto.html":{}}}],["isnotempty()@isnumber",{"_index":303,"title":{},"body":{"classes/CreateBookDto.html":{}}}],["isnotempty()@isstring",{"_index":295,"title":{},"body":{"classes/CreateBookDto.html":{},"classes/SignUpDto.html":{}}}],["isnotempty()@isstring()@minlength(6",{"_index":338,"title":{},"body":{"classes/LoginDto.html":{},"classes/SignUpDto.html":{}}}],["isnumber",{"_index":308,"title":{},"body":{"classes/CreateBookDto.html":{},"classes/UpdateBookDto.html":{}}}],["isoptional",{"_index":351,"title":{},"body":{"classes/UpdateBookDto.html":{}}}],["isoptional()@isenum(category",{"_index":349,"title":{},"body":{"classes/UpdateBookDto.html":{}}}],["isoptional()@isnumber",{"_index":350,"title":{},"body":{"classes/UpdateBookDto.html":{}}}],["isoptional()@isstring",{"_index":348,"title":{},"body":{"classes/UpdateBookDto.html":{}}}],["ispasswordmatched",{"_index":156,"title":{},"body":{"injectables/AuthService.html":{}}}],["isstring",{"_index":309,"title":{},"body":{"classes/CreateBookDto.html":{},"classes/LoginDto.html":{},"classes/SignUpDto.html":{},"classes/UpdateBookDto.html":{}}}],["isvalidid",{"_index":282,"title":{},"body":{"injectables/BookService.html":{}}}],["join",{"_index":448,"title":{},"body":{"index.html":{}}}],["jwt",{"_index":111,"title":{},"body":{"modules/AuthModule.html":{},"injectables/JwtStrategy.html":{},"dependencies.html":{}}}],["jwt.strategy",{"_index":108,"title":{},"body":{"modules/AuthModule.html":{}}}],["jwtfromrequest",{"_index":326,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["jwtmodule",{"_index":103,"title":{},"body":{"modules/AuthModule.html":{}}}],["jwtmodule.registerasync",{"_index":112,"title":{},"body":{"modules/AuthModule.html":{}}}],["jwtservice",{"_index":128,"title":{},"body":{"injectables/AuthService.html":{}}}],["jwtstrategy",{"_index":95,"title":{"injectables/JwtStrategy.html":{}},"body":{"modules/AuthModule.html":{},"injectables/JwtStrategy.html":{},"coverage.html":{},"overview.html":{}}}],["kamil",{"_index":454,"title":{},"body":{"index.html":{}}}],["keyword",{"_index":272,"title":{},"body":{"injectables/BookService.html":{}}}],["license",{"_index":460,"title":{},"body":{"index.html":{},"properties.html":{}}}],["licensed",{"_index":438,"title":{},"body":{"index.html":{}}}],["limit(resperpage",{"_index":278,"title":{},"body":{"injectables/BookService.html":{}}}],["login",{"_index":66,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["login(@body",{"_index":90,"title":{},"body":{"controllers/AuthController.html":{}}}],["login(logindto",{"_index":68,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["logindto",{"_index":69,"title":{"classes/LoginDto.html":{}},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/LoginDto.html":{},"coverage.html":{}}}],["matching",{"_index":27,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/Book.html":{},"controllers/BookController.html":{},"modules/BookModule.html":{},"injectables/BookService.html":{},"classes/CreateBookDto.html":{},"injectables/JwtStrategy.html":{},"classes/LoginDto.html":{},"classes/SignUpDto.html":{},"classes/UpdateBookDto.html":{},"classes/User.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["message",{"_index":298,"title":{},"body":{"classes/CreateBookDto.html":{},"classes/LoginDto.html":{},"classes/SignUpDto.html":{},"classes/UpdateBookDto.html":{}}}],["metadata",{"_index":394,"title":{},"body":{"dependencies.html":{}}}],["methods",{"_index":8,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"controllers/BookController.html":{},"injectables/BookService.html":{},"injectables/JwtStrategy.html":{}}}],["minlength",{"_index":341,"title":{},"body":{"classes/LoginDto.html":{},"classes/SignUpDto.html":{}}}],["minlength(6",{"_index":342,"title":{},"body":{"classes/LoginDto.html":{},"classes/SignUpDto.html":{}}}],["miscellaneous",{"_index":398,"title":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["mit",{"_index":437,"title":{},"body":{"index.html":{}}}],["mode",{"_index":427,"title":{},"body":{"index.html":{}}}],["model",{"_index":127,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{}}}],["module",{"_index":28,"title":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/BookModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/BookModule.html":{}}}],["modules",{"_index":30,"title":{"modules.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/BookModule.html":{},"modules.html":{},"overview.html":{}}}],["mongoose",{"_index":135,"title":{},"body":{"injectables/AuthService.html":{},"injectables/BookService.html":{},"injectables/JwtStrategy.html":{},"dependencies.html":{}}}],["mongoose.isvalidobjectid(_id",{"_index":283,"title":{},"body":{"injectables/BookService.html":{}}}],["mongoose.model",{"_index":250,"title":{},"body":{"injectables/BookService.html":{}}}],["mongoosemodule",{"_index":47,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/BookModule.html":{}}}],["mongoosemodule.forfeature",{"_index":120,"title":{},"body":{"modules/AuthModule.html":{},"modules/BookModule.html":{}}}],["mongoosemodule.forroot(process.env.db_uri",{"_index":55,"title":{},"body":{"modules/AppModule.html":{}}}],["more",{"_index":450,"title":{},"body":{"index.html":{}}}],["myśliwiec",{"_index":455,"title":{},"body":{"index.html":{}}}],["name",{"_index":73,"title":{},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"controllers/BookController.html":{},"modules/BookModule.html":{},"injectables/BookService.html":{},"injectables/JwtStrategy.html":{},"classes/SignUpDto.html":{},"classes/User.html":{}}}],["nest",{"_index":415,"title":{},"body":{"index.html":{}}}],["nestframework",{"_index":459,"title":{},"body":{"index.html":{}}}],["nestjs/common",{"_index":17,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"controllers/BookController.html":{},"modules/BookModule.html":{},"injectables/BookService.html":{},"injectables/JwtStrategy.html":{},"dependencies.html":{}}}],["nestjs/config",{"_index":46,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"dependencies.html":{}}}],["nestjs/core",{"_index":381,"title":{},"body":{"dependencies.html":{}}}],["nestjs/jwt",{"_index":104,"title":{},"body":{"modules/AuthModule.html":{},"injectables/AuthService.html":{},"dependencies.html":{}}}],["nestjs/mongoose",{"_index":48,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/Book.html":{},"modules/BookModule.html":{},"injectables/BookService.html":{},"injectables/JwtStrategy.html":{},"classes/User.html":{},"dependencies.html":{}}}],["nestjs/passport",{"_index":102,"title":{},"body":{"modules/AuthModule.html":{},"controllers/BookController.html":{},"injectables/JwtStrategy.html":{},"dependencies.html":{}}}],["nestjs/platform",{"_index":385,"title":{},"body":{"dependencies.html":{}}}],["new",{"_index":154,"title":{},"body":{"injectables/AuthService.html":{},"injectables/BookService.html":{},"injectables/JwtStrategy.html":{},"coverage.html":{}}}],["node.js",{"_index":407,"title":{},"body":{"index.html":{}}}],["notfoundexception",{"_index":264,"title":{},"body":{"injectables/BookService.html":{}}}],["notfoundexception('book",{"_index":288,"title":{},"body":{"injectables/BookService.html":{}}}],["npm",{"_index":420,"title":{},"body":{"index.html":{}}}],["number",{"_index":172,"title":{},"body":{"classes/Book.html":{},"classes/CreateBookDto.html":{},"classes/UpdateBookDto.html":{}}}],["number(query.page",{"_index":269,"title":{},"body":{"injectables/BookService.html":{}}}],["open",{"_index":439,"title":{},"body":{"index.html":{}}}],["optional",{"_index":75,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"controllers/BookController.html":{},"injectables/BookService.html":{},"injectables/JwtStrategy.html":{}}}],["options",{"_index":275,"title":{},"body":{"injectables/BookService.html":{}}}],["out",{"_index":39,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/BookModule.html":{},"overview.html":{}}}],["overview",{"_index":464,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["package",{"_index":378,"title":{"dependencies.html":{},"properties.html":{}},"body":{}}],["param",{"_index":214,"title":{},"body":{"controllers/BookController.html":{}}}],["param('_id",{"_index":231,"title":{},"body":{"controllers/BookController.html":{}}}],["parameters",{"_index":72,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"controllers/BookController.html":{},"injectables/BookService.html":{},"injectables/JwtStrategy.html":{}}}],["passport",{"_index":322,"title":{},"body":{"injectables/JwtStrategy.html":{},"dependencies.html":{}}}],["passportmodule",{"_index":101,"title":{},"body":{"modules/AuthModule.html":{}}}],["passportmodule.register",{"_index":109,"title":{},"body":{"modules/AuthModule.html":{}}}],["passportstrategy",{"_index":319,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["passportstrategy(strategy",{"_index":324,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["password",{"_index":142,"title":{},"body":{"injectables/AuthService.html":{},"classes/LoginDto.html":{},"classes/SignUpDto.html":{},"classes/User.html":{}}}],["payload",{"_index":317,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["please",{"_index":299,"title":{},"body":{"classes/CreateBookDto.html":{},"classes/LoginDto.html":{},"classes/SignUpDto.html":{},"classes/UpdateBookDto.html":{},"index.html":{}}}],["post",{"_index":82,"title":{},"body":{"controllers/AuthController.html":{},"controllers/BookController.html":{}}}],["post('/signup",{"_index":79,"title":{},"body":{"controllers/AuthController.html":{}}}],["post()@useguards(undefined",{"_index":196,"title":{},"body":{"controllers/BookController.html":{}}}],["prefix",{"_index":64,"title":{},"body":{"controllers/AuthController.html":{},"controllers/BookController.html":{}}}],["price",{"_index":166,"title":{},"body":{"classes/Book.html":{},"classes/CreateBookDto.html":{},"classes/UpdateBookDto.html":{}}}],["private",{"_index":139,"title":{},"body":{"injectables/AuthService.html":{},"injectables/BookService.html":{},"injectables/JwtStrategy.html":{}}}],["process",{"_index":107,"title":{},"body":{"modules/AuthModule.html":{}}}],["process.env.jwt_secret",{"_index":329,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["production",{"_index":429,"title":{},"body":{"index.html":{}}}],["progressive",{"_index":406,"title":{},"body":{"index.html":{}}}],["project",{"_index":440,"title":{},"body":{"index.html":{}}}],["promise",{"_index":76,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"controllers/BookController.html":{},"injectables/BookService.html":{}}}],["prop",{"_index":168,"title":{},"body":{"classes/Book.html":{},"classes/User.html":{}}}],["prop({unique",{"_index":353,"title":{},"body":{"classes/User.html":{}}}],["properties",{"_index":162,"title":{"properties.html":{}},"body":{"classes/Book.html":{},"classes/CreateBookDto.html":{},"classes/LoginDto.html":{},"classes/SignUpDto.html":{},"classes/UpdateBookDto.html":{},"classes/User.html":{},"properties.html":{}}}],["providers",{"_index":41,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/BookModule.html":{}}}],["put",{"_index":215,"title":{},"body":{"controllers/BookController.html":{}}}],["put(':_id",{"_index":211,"title":{},"body":{"controllers/BookController.html":{}}}],["query",{"_index":205,"title":{},"body":{"controllers/BookController.html":{},"injectables/BookService.html":{}}}],["query.keyword",{"_index":273,"title":{},"body":{"injectables/BookService.html":{}}}],["read",{"_index":449,"title":{},"body":{"index.html":{}}}],["readonly",{"_index":23,"title":{},"body":{"controllers/AppController.html":{},"classes/CreateBookDto.html":{},"classes/LoginDto.html":{},"classes/SignUpDto.html":{},"classes/UpdateBookDto.html":{}}}],["reflect",{"_index":393,"title":{},"body":{"dependencies.html":{}}}],["regex",{"_index":274,"title":{},"body":{"injectables/BookService.html":{}}}],["repository",{"_index":418,"title":{},"body":{"index.html":{}}}],["res",{"_index":280,"title":{},"body":{"injectables/BookService.html":{}}}],["reset",{"_index":38,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/BookModule.html":{},"overview.html":{}}}],["resperpage",{"_index":266,"title":{},"body":{"injectables/BookService.html":{}}}],["results",{"_index":26,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/Book.html":{},"controllers/BookController.html":{},"modules/BookModule.html":{},"injectables/BookService.html":{},"classes/CreateBookDto.html":{},"injectables/JwtStrategy.html":{},"classes/LoginDto.html":{},"classes/SignUpDto.html":{},"classes/UpdateBookDto.html":{},"classes/User.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["return",{"_index":24,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"controllers/BookController.html":{},"injectables/BookService.html":{},"injectables/JwtStrategy.html":{}}}],["returns",{"_index":14,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"controllers/BookController.html":{},"injectables/BookService.html":{},"injectables/JwtStrategy.html":{}}}],["run",{"_index":424,"title":{},"body":{"index.html":{}}}],["runvalidators",{"_index":291,"title":{},"body":{"injectables/BookService.html":{}}}],["rxjs",{"_index":396,"title":{},"body":{"dependencies.html":{}}}],["scalable",{"_index":411,"title":{},"body":{"index.html":{}}}],["schema",{"_index":122,"title":{},"body":{"modules/AuthModule.html":{},"classes/Book.html":{},"modules/BookModule.html":{},"classes/User.html":{}}}],["schemafactory",{"_index":175,"title":{},"body":{"classes/Book.html":{},"classes/User.html":{}}}],["schemafactory.createforclass(book",{"_index":185,"title":{},"body":{"classes/Book.html":{},"miscellaneous/variables.html":{}}}],["schemafactory.createforclass(user",{"_index":360,"title":{},"body":{"classes/User.html":{},"miscellaneous/variables.html":{}}}],["schemas/book.schema",{"_index":219,"title":{},"body":{"controllers/BookController.html":{},"modules/BookModule.html":{},"injectables/BookService.html":{},"classes/CreateBookDto.html":{},"classes/UpdateBookDto.html":{}}}],["schemas/user.schema",{"_index":100,"title":{},"body":{"modules/AuthModule.html":{},"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{}}}],["secret",{"_index":115,"title":{},"body":{"modules/AuthModule.html":{}}}],["secretorkey",{"_index":328,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["serve",{"_index":224,"title":{},"body":{"controllers/BookController.html":{},"injectables/BookService.html":{}}}],["server",{"_index":412,"title":{},"body":{"index.html":{}}}],["side",{"_index":413,"title":{},"body":{"index.html":{}}}],["signoptions",{"_index":117,"title":{},"body":{"modules/AuthModule.html":{}}}],["signup",{"_index":67,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["signup(@body",{"_index":88,"title":{},"body":{"controllers/AuthController.html":{}}}],["signup(signupdto",{"_index":77,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["signupdto",{"_index":78,"title":{"classes/SignUpDto.html":{}},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/SignUpDto.html":{},"coverage.html":{}}}],["skip",{"_index":271,"title":{},"body":{"injectables/BookService.html":{}}}],["skip(skip",{"_index":279,"title":{},"body":{"injectables/BookService.html":{}}}],["source",{"_index":4,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/Book.html":{},"controllers/BookController.html":{},"modules/BookModule.html":{},"injectables/BookService.html":{},"classes/CreateBookDto.html":{},"injectables/JwtStrategy.html":{},"classes/LoginDto.html":{},"classes/SignUpDto.html":{},"classes/UpdateBookDto.html":{},"classes/User.html":{},"index.html":{}}}],["sponsors",{"_index":443,"title":{},"body":{"index.html":{}}}],["src/.../book.schema.ts",{"_index":400,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["src/.../main.ts",{"_index":403,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../user.schema.ts",{"_index":472,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/app.controller.ts",{"_index":6,"title":{},"body":{"controllers/AppController.html":{},"coverage.html":{}}}],["src/app.controller.ts:9",{"_index":13,"title":{},"body":{"controllers/AppController.html":{}}}],["src/app.module.ts",{"_index":40,"title":{},"body":{"modules/AppModule.html":{}}}],["src/app.service.ts",{"_index":58,"title":{},"body":{"injectables/AppService.html":{},"coverage.html":{}}}],["src/app.service.ts:5",{"_index":59,"title":{},"body":{"injectables/AppService.html":{}}}],["src/auth/auth.controller.ts",{"_index":63,"title":{},"body":{"controllers/AuthController.html":{},"coverage.html":{}}}],["src/auth/auth.controller.ts:11",{"_index":80,"title":{},"body":{"controllers/AuthController.html":{}}}],["src/auth/auth.controller.ts:16",{"_index":71,"title":{},"body":{"controllers/AuthController.html":{}}}],["src/auth/auth.module",{"_index":242,"title":{},"body":{"modules/BookModule.html":{}}}],["src/auth/auth.module.ts",{"_index":96,"title":{},"body":{"modules/AuthModule.html":{}}}],["src/auth/auth.service.ts",{"_index":123,"title":{},"body":{"injectables/AuthService.html":{},"coverage.html":{}}}],["src/auth/auth.service.ts:11",{"_index":129,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/auth.service.ts:18",{"_index":132,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/auth.service.ts:33",{"_index":131,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/dto/login.dto.ts",{"_index":335,"title":{},"body":{"classes/LoginDto.html":{},"coverage.html":{}}}],["src/auth/dto/login.dto.ts:11",{"_index":339,"title":{},"body":{"classes/LoginDto.html":{}}}],["src/auth/dto/login.dto.ts:6",{"_index":337,"title":{},"body":{"classes/LoginDto.html":{}}}],["src/auth/dto/signup.dto.ts",{"_index":343,"title":{},"body":{"classes/SignUpDto.html":{},"coverage.html":{}}}],["src/auth/dto/signup.dto.ts:10",{"_index":344,"title":{},"body":{"classes/SignUpDto.html":{}}}],["src/auth/dto/signup.dto.ts:15",{"_index":346,"title":{},"body":{"classes/SignUpDto.html":{}}}],["src/auth/dto/signup.dto.ts:6",{"_index":345,"title":{},"body":{"classes/SignUpDto.html":{}}}],["src/auth/jwt.strategy.ts",{"_index":312,"title":{},"body":{"injectables/JwtStrategy.html":{},"coverage.html":{}}}],["src/auth/jwt.strategy.ts:20",{"_index":316,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["src/auth/jwt.strategy.ts:9",{"_index":314,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["src/auth/schemas/user.schema",{"_index":176,"title":{},"body":{"classes/Book.html":{}}}],["src/auth/schemas/user.schema.ts",{"_index":352,"title":{},"body":{"classes/User.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/auth/schemas/user.schema.ts:11",{"_index":355,"title":{},"body":{"classes/User.html":{}}}],["src/auth/schemas/user.schema.ts:14",{"_index":357,"title":{},"body":{"classes/User.html":{}}}],["src/auth/schemas/user.schema.ts:8",{"_index":356,"title":{},"body":{"classes/User.html":{}}}],["src/book/book.controller.ts",{"_index":187,"title":{},"body":{"controllers/BookController.html":{},"coverage.html":{}}}],["src/book/book.controller.ts:24",{"_index":204,"title":{},"body":{"controllers/BookController.html":{}}}],["src/book/book.controller.ts:29",{"_index":208,"title":{},"body":{"controllers/BookController.html":{}}}],["src/book/book.controller.ts:38",{"_index":197,"title":{},"body":{"controllers/BookController.html":{}}}],["src/book/book.controller.ts:46",{"_index":212,"title":{},"body":{"controllers/BookController.html":{}}}],["src/book/book.controller.ts:56",{"_index":200,"title":{},"body":{"controllers/BookController.html":{}}}],["src/book/book.module.ts",{"_index":240,"title":{},"body":{"modules/BookModule.html":{}}}],["src/book/book.service.ts",{"_index":243,"title":{},"body":{"injectables/BookService.html":{},"coverage.html":{}}}],["src/book/book.service.ts:12",{"_index":251,"title":{},"body":{"injectables/BookService.html":{}}}],["src/book/book.service.ts:18",{"_index":258,"title":{},"body":{"injectables/BookService.html":{}}}],["src/book/book.service.ts:39",{"_index":254,"title":{},"body":{"injectables/BookService.html":{}}}],["src/book/book.service.ts:44",{"_index":260,"title":{},"body":{"injectables/BookService.html":{}}}],["src/book/book.service.ts:58",{"_index":262,"title":{},"body":{"injectables/BookService.html":{}}}],["src/book/book.service.ts:65",{"_index":256,"title":{},"body":{"injectables/BookService.html":{}}}],["src/book/dto/create",{"_index":293,"title":{},"body":{"classes/CreateBookDto.html":{},"coverage.html":{}}}],["src/book/dto/update",{"_index":347,"title":{},"body":{"classes/UpdateBookDto.html":{},"coverage.html":{}}}],["src/book/schemas/book.schema.ts",{"_index":161,"title":{},"body":{"classes/Book.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["src/book/schemas/book.schema.ts:14",{"_index":174,"title":{},"body":{"classes/Book.html":{}}}],["src/book/schemas/book.schema.ts:17",{"_index":171,"title":{},"body":{"classes/Book.html":{}}}],["src/book/schemas/book.schema.ts:20",{"_index":169,"title":{},"body":{"classes/Book.html":{}}}],["src/book/schemas/book.schema.ts:23",{"_index":173,"title":{},"body":{"classes/Book.html":{}}}],["src/book/schemas/book.schema.ts:26",{"_index":170,"title":{},"body":{"classes/Book.html":{}}}],["src/main.ts",{"_index":373,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["start",{"_index":425,"title":{},"body":{"index.html":{}}}],["start:dev",{"_index":428,"title":{},"body":{"index.html":{}}}],["start:prodtest",{"_index":430,"title":{},"body":{"index.html":{}}}],["started",{"_index":405,"title":{"index.html":{}},"body":{}}],["starter",{"_index":417,"title":{},"body":{"index.html":{}}}],["statements",{"_index":364,"title":{},"body":{"coverage.html":{}}}],["static",{"_index":225,"title":{},"body":{"controllers/BookController.html":{},"injectables/BookService.html":{}}}],["stay",{"_index":452,"title":{},"body":{"index.html":{}}}],["strategy",{"_index":320,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["string",{"_index":15,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"classes/Book.html":{},"controllers/BookController.html":{},"injectables/BookService.html":{},"classes/CreateBookDto.html":{},"classes/LoginDto.html":{},"classes/SignUpDto.html":{},"classes/UpdateBookDto.html":{},"classes/User.html":{}}}],["super",{"_index":325,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["support",{"_index":444,"title":{},"body":{"index.html":{},"modules.html":{}}}],["svg",{"_index":462,"title":{},"body":{"modules.html":{}}}],["table",{"_index":377,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":376,"title":{},"body":{"coverage.html":{}}}],["test",{"_index":433,"title":{},"body":{"index.html":{}}}],["test:covsupport",{"_index":436,"title":{},"body":{"index.html":{}}}],["test:e2e",{"_index":435,"title":{},"body":{"index.html":{}}}],["tests",{"_index":432,"title":{},"body":{"index.html":{}}}],["thanks",{"_index":442,"title":{},"body":{"index.html":{}}}],["this.appservice.gethello",{"_index":25,"title":{},"body":{"controllers/AppController.html":{}}}],["this.authservice.login(logindto",{"_index":91,"title":{},"body":{"controllers/AuthController.html":{}}}],["this.authservice.signup(signupdto",{"_index":89,"title":{},"body":{"controllers/AuthController.html":{}}}],["this.bookmodel",{"_index":276,"title":{},"body":{"injectables/BookService.html":{}}}],["this.bookmodel.create(book",{"_index":281,"title":{},"body":{"injectables/BookService.html":{}}}],["this.bookmodel.findbyid(_id",{"_index":287,"title":{},"body":{"injectables/BookService.html":{}}}],["this.bookmodel.findbyidanddelete(_id",{"_index":292,"title":{},"body":{"injectables/BookService.html":{}}}],["this.bookmodel.findbyidandupdate(_id",{"_index":290,"title":{},"body":{"injectables/BookService.html":{}}}],["this.bookservice.create(book",{"_index":234,"title":{},"body":{"controllers/BookController.html":{}}}],["this.bookservice.deletebyid(_id",{"_index":236,"title":{},"body":{"controllers/BookController.html":{}}}],["this.bookservice.findall(query",{"_index":230,"title":{},"body":{"controllers/BookController.html":{}}}],["this.bookservice.findbyid(_id",{"_index":232,"title":{},"body":{"controllers/BookController.html":{}}}],["this.bookservice.updatebyid(_id",{"_index":235,"title":{},"body":{"controllers/BookController.html":{}}}],["this.jwtservice.sign",{"_index":149,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.usermodel.create",{"_index":147,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.usermodel.findbyid(id",{"_index":330,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["this.usermodel.findone",{"_index":152,"title":{},"body":{"injectables/AuthService.html":{}}}],["throw",{"_index":153,"title":{},"body":{"injectables/AuthService.html":{},"injectables/BookService.html":{},"injectables/JwtStrategy.html":{}}}],["timestamps",{"_index":183,"title":{},"body":{"classes/Book.html":{},"classes/User.html":{}}}],["title",{"_index":167,"title":{},"body":{"classes/Book.html":{},"injectables/BookService.html":{},"classes/CreateBookDto.html":{},"classes/UpdateBookDto.html":{}}}],["token",{"_index":148,"title":{},"body":{"injectables/AuthService.html":{}}}],["touch",{"_index":453,"title":{},"body":{"index.html":{}}}],["transformer",{"_index":387,"title":{},"body":{"dependencies.html":{}}}],["true",{"_index":54,"title":{},"body":{"modules/AppModule.html":{},"classes/Book.html":{},"injectables/BookService.html":{},"classes/User.html":{}}}],["twitter",{"_index":458,"title":{},"body":{"index.html":{}}}],["type",{"_index":74,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/Book.html":{},"controllers/BookController.html":{},"injectables/BookService.html":{},"classes/CreateBookDto.html":{},"injectables/JwtStrategy.html":{},"classes/LoginDto.html":{},"classes/SignUpDto.html":{},"classes/UpdateBookDto.html":{},"classes/User.html":{},"coverage.html":{}}}],["typescript",{"_index":416,"title":{},"body":{"index.html":{}}}],["unauthorizedexception",{"_index":133,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{}}}],["unauthorizedexception('invalid",{"_index":155,"title":{},"body":{"injectables/AuthService.html":{}}}],["unauthorizedexception('login",{"_index":331,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["undefined",{"_index":354,"title":{},"body":{"classes/User.html":{}}}],["unique",{"_index":358,"title":{},"body":{"classes/User.html":{}}}],["unit",{"_index":431,"title":{},"body":{"index.html":{}}}],["unknown",{"_index":318,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["unlicensed",{"_index":470,"title":{},"body":{"properties.html":{}}}],["updatebook",{"_index":193,"title":{},"body":{"controllers/BookController.html":{}}}],["updatebook(_id",{"_index":209,"title":{},"body":{"controllers/BookController.html":{}}}],["updatebookdto",{"_index":210,"title":{"classes/UpdateBookDto.html":{}},"body":{"controllers/BookController.html":{},"classes/UpdateBookDto.html":{},"coverage.html":{}}}],["updatebyid",{"_index":248,"title":{},"body":{"injectables/BookService.html":{}}}],["updatebyid(_id",{"_index":261,"title":{},"body":{"injectables/BookService.html":{}}}],["usefactory",{"_index":114,"title":{},"body":{"modules/AuthModule.html":{}}}],["useguards",{"_index":216,"title":{},"body":{"controllers/BookController.html":{}}}],["useguards(authguard",{"_index":233,"title":{},"body":{"controllers/BookController.html":{}}}],["user",{"_index":121,"title":{"classes/User.html":{}},"body":{"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/Book.html":{},"injectables/JwtStrategy.html":{},"classes/User.html":{},"coverage.html":{}}}],["user._id",{"_index":151,"title":{},"body":{"injectables/AuthService.html":{}}}],["user.password",{"_index":158,"title":{},"body":{"injectables/AuthService.html":{}}}],["usermodel",{"_index":130,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{}}}],["userschema",{"_index":99,"title":{},"body":{"modules/AuthModule.html":{},"classes/User.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["validate",{"_index":313,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["validate(payload",{"_index":315,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["validator",{"_index":310,"title":{},"body":{"classes/CreateBookDto.html":{},"classes/LoginDto.html":{},"classes/SignUpDto.html":{},"classes/UpdateBookDto.html":{},"dependencies.html":{}}}],["value",{"_index":401,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["variable",{"_index":369,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":471,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["version",{"_index":468,"title":{},"body":{"properties.html":{}}}],["watch",{"_index":426,"title":{},"body":{"index.html":{}}}],["website",{"_index":456,"title":{},"body":{"index.html":{}}}],["world",{"_index":61,"title":{},"body":{"injectables/AppService.html":{}}}],["you'd",{"_index":447,"title":{},"body":{"index.html":{}}}],["zoom",{"_index":37,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/BookModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"controllers/AppController.html":{"url":"controllers/AppController.html","title":"controller - AppController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  AppController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app.controller.ts\n        \n\n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getHello\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getHello\n                        \n                    \n                \n            \n            \n                \ngetHello()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()\n                \n            \n\n            \n                \n                    Defined in src/app.controller.ts:9\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get } from '@nestjs/common';\nimport { AppService } from './app.service';\n\n@Controller()\nexport class AppController {\n  constructor(private readonly appService: AppService) {}\n\n  @Get()\n  getHello(): string {\n    return this.appService.getHello();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_providers\n\n\n\n\nAuthModule\n\nAuthModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAuthModule->AppModule\n\n\n\n\n\nBookModule\n\nBookModule\n\nAppModule -->\n\nBookModule->AppModule\n\n\n\n\n\nAppService\n\nAppService\n\nAppModule -->\n\nAppService->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AppService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            AppController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AuthModule\n                        \n                        \n                            BookModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { AppController } from './app.controller';\nimport { AppService } from './app.service';\nimport { BookModule } from './book/book.module';\nimport { ConfigModule } from '@nestjs/config';\nimport { MongooseModule } from '@nestjs/mongoose';\nimport { AuthModule } from './auth/auth.module';\n\n@Module({\n  imports: [\n    ConfigModule.forRoot({\n      envFilePath: '.env',\n      isGlobal: true,\n    }),\n    MongooseModule.forRoot(process.env.DB_URI),\n    BookModule,\n    AuthModule,\n  ],\n  controllers: [AppController],\n  providers: [AppService],\n})\nexport class AppModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AppService.html":{"url":"injectables/AppService.html","title":"injectable - AppService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AppService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getHello\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getHello\n                        \n                    \n                \n            \n            \n                \ngetHello()\n                \n            \n\n\n            \n                \n                    Defined in src/app.service.ts:5\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\n\n@Injectable()\nexport class AppService {\n  getHello(): string {\n    return 'Hello World!';\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/AuthController.html":{"url":"controllers/AuthController.html","title":"controller - AuthController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  AuthController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/auth.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                auth\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                login\n                            \n                            \n                                signUp\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        login\n                        \n                    \n                \n            \n            \n                \nlogin(loginDto: LoginDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('/login')\n                \n            \n\n            \n                \n                    Defined in src/auth/auth.controller.ts:16\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    loginDto\n                                    \n                                                LoginDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        signUp\n                        \n                    \n                \n            \n            \n                \nsignUp(signUpDto: SignUpDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('/signup')\n                \n            \n\n            \n                \n                    Defined in src/auth/auth.controller.ts:11\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    signUpDto\n                                    \n                                                SignUpDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Body, Controller, Get, Post } from '@nestjs/common';\nimport { AuthService } from './auth.service';\nimport { SignUpDto } from './dto/signUp.dto';\nimport { LoginDto } from './dto/login.dto';\n\n@Controller('auth')\nexport class AuthController {\n  constructor(private authService: AuthService) {}\n\n  @Post('/signup')\n  signUp(@Body() signUpDto: SignUpDto): Promise {\n    return this.authService.signUp(signUpDto);\n  }\n\n  @Get('/login')\n  login(@Body() loginDto: LoginDto): Promise {\n    return this.authService.login(loginDto);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AuthModule.html":{"url":"modules/AuthModule.html","title":"module - AuthModule","body":"\n                   \n\n\n\n\n    Modules\n    AuthModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_AuthModule\n\n\n\ncluster_AuthModule_exports\n\n\n\ncluster_AuthModule_providers\n\n\n\n\nJwtStrategy \n\nJwtStrategy \n\n\n\nAuthModule\n\nAuthModule\n\nJwtStrategy  -->\n\nAuthModule->JwtStrategy \n\n\n\n\n\nAuthService\n\nAuthService\n\nAuthModule -->\n\nAuthService->AuthModule\n\n\n\n\n\nJwtStrategy\n\nJwtStrategy\n\nAuthModule -->\n\nJwtStrategy->AuthModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/auth/auth.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AuthService\n                        \n                        \n                            JwtStrategy\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            AuthController\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            JwtStrategy\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { AuthController } from './auth.controller';\nimport { AuthService } from './auth.service';\nimport { MongooseModule } from '@nestjs/mongoose';\nimport { userSchema } from './schemas/user.schema';\nimport { PassportModule } from '@nestjs/passport';\nimport { JwtModule } from '@nestjs/jwt';\nimport { ConfigService } from '@nestjs/config';\nimport { config } from 'process';\nimport { JwtStrategy } from './jwt.strategy';\n\n@Module({\n  imports: [\n    PassportModule.register({ defaultStrategy: 'jwt' }),\n    JwtModule.registerAsync({\n      inject: [ConfigService],\n      useFactory: (config: ConfigService) => {\n        return {\n          secret: config.get('JWT_SECRET'),\n          signOptions: {\n            expiresIn: config.get('JWT_EXPIRES'),\n          },\n        };\n      },\n    }),\n    MongooseModule.forFeature([{ name: 'User', schema: userSchema }]),\n  ],\n  controllers: [AuthController],\n  providers: [AuthService, JwtStrategy],\n  exports: [JwtStrategy, PassportModule],\n})\nexport class AuthModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AuthService.html":{"url":"injectables/AuthService.html","title":"injectable - AuthService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AuthService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/auth.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                login\n                            \n                            \n                                    Async\n                                signUp\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(userModel: Model, jwtService: JwtService)\n                    \n                \n                        \n                            \n                                Defined in src/auth/auth.service.ts:11\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        userModel\n                                                  \n                                                        \n                                                                        Model\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        jwtService\n                                                  \n                                                        \n                                                                    JwtService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        login\n                        \n                    \n                \n            \n            \n                \n                    \n                    login(loginDto: LoginDto)\n                \n            \n\n\n            \n                \n                    Defined in src/auth/auth.service.ts:33\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    loginDto\n                                    \n                                                LoginDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        signUp\n                        \n                    \n                \n            \n            \n                \n                    \n                    signUp(signUpDto: SignUpDto)\n                \n            \n\n\n            \n                \n                    Defined in src/auth/auth.service.ts:18\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    signUpDto\n                                    \n                                                SignUpDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, UnauthorizedException } from '@nestjs/common';\nimport { InjectModel } from '@nestjs/mongoose';\nimport { User } from './schemas/user.schema';\nimport { Model } from 'mongoose';\nimport * as bcrypt from 'bcryptjs';\nimport { JwtService } from '@nestjs/jwt';\nimport { SignUpDto } from './dto/signUp.dto';\nimport { LoginDto } from './dto/login.dto';\n\n@Injectable()\nexport class AuthService {\n  constructor(\n    @InjectModel(User.name)\n    private userModel: Model,\n    private jwtService: JwtService,\n  ) {}\n\n  async signUp(signUpDto: SignUpDto): Promise {\n    const { name, email, password } = signUpDto;\n    const hashedPassword = await bcrypt.hash(password, 10);\n\n    const user = await this.userModel.create({\n      name,\n      email,\n      password: hashedPassword,\n    });\n\n    const token = this.jwtService.sign({ id: user._id });\n\n    return { token };\n  }\n\n  async login(loginDto: LoginDto): Promise {\n    const { email, password } = loginDto;\n\n    const user = await this.userModel.findOne({ email });\n\n    if (!user) {\n      throw new UnauthorizedException('Invalid email or password');\n    }\n\n    const isPasswordMatched = await bcrypt.compare(password, user.password);\n    if (!isPasswordMatched) {\n      throw new UnauthorizedException('Invalid email or password');\n    }\n\n    const token = this.jwtService.sign({ id: user._id });\n\n    return { token };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Book.html":{"url":"classes/Book.html","title":"class - Book","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Book\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/book/schemas/book.schema.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                author\n                            \n                            \n                                category\n                            \n                            \n                                description\n                            \n                            \n                                price\n                            \n                            \n                                title\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        author\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/book/schemas/book.schema.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        category\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Category\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/book/schemas/book.schema.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        description\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/book/schemas/book.schema.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        price\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/book/schemas/book.schema.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        title\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/book/schemas/book.schema.ts:14\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Prop, Schema, SchemaFactory } from '@nestjs/mongoose';\nimport { User } from 'src/auth/schemas/user.schema';\n\nexport enum Category {\n  ADVENTURE = 'Adventure',\n  CLASSICS = 'Classic',\n  CRIME = 'Crime',\n  FANTASY = 'Fantasy',\n}\n\n@Schema({ timestamps: true })\nexport class Book {\n  @Prop()\n  title: string;\n\n  @Prop()\n  description: string;\n\n  @Prop()\n  author: string;\n\n  @Prop()\n  price: number;\n\n  @Prop()\n  category: Category;\n}\n\nexport const BookSchema = SchemaFactory.createForClass(Book);\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/BookController.html":{"url":"controllers/BookController.html","title":"controller - BookController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  BookController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/book/book.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                books\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                createBook\n                            \n                            \n                                    Async\n                                deleteBook\n                            \n                            \n                                    Async\n                                getAllBooks\n                            \n                            \n                                    Async\n                                getBook\n                            \n                            \n                                    Async\n                                updateBook\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        createBook\n                        \n                    \n                \n            \n            \n                \n                    \n                    createBook(book: CreateBookDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()@UseGuards(undefined)\n                \n            \n\n            \n                \n                    Defined in src/book/book.controller.ts:38\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    book\n                                    \n                                                CreateBookDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        deleteBook\n                        \n                    \n                \n            \n            \n                \n                    \n                    deleteBook(_id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete(':_id')\n                \n            \n\n            \n                \n                    Defined in src/book/book.controller.ts:56\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    _id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getAllBooks\n                        \n                    \n                \n            \n            \n                \n                    \n                    getAllBooks(query: ExpressQuery)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()\n                \n            \n\n            \n                \n                    Defined in src/book/book.controller.ts:24\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    query\n                                    \n                                            ExpressQuery\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getBook\n                        \n                    \n                \n            \n            \n                \n                    \n                    getBook(_id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get(':_id')\n                \n            \n\n            \n                \n                    Defined in src/book/book.controller.ts:29\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    _id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        updateBook\n                        \n                    \n                \n            \n            \n                \n                    \n                    updateBook(_id: string, book: UpdateBookDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Put(':_id')\n                \n            \n\n            \n                \n                    Defined in src/book/book.controller.ts:46\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    _id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    book\n                                    \n                                                UpdateBookDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import {\n  Body,\n  Controller,\n  Delete,\n  Get,\n  Param,\n  Post,\n  Put,\n  Query,\n  UseGuards,\n} from '@nestjs/common';\nimport { BookService } from './book.service';\nimport { Book } from './schemas/book.schema';\nimport { CreateBookDto } from './dto/create-book.dto';\nimport { UpdateBookDto } from './dto/update-book.dto';\nimport { Query as ExpressQuery } from 'express-serve-static-core';\nimport { AuthGuard } from '@nestjs/passport';\n\n@Controller('books')\nexport class BookController {\n  constructor(private bookService: BookService) {}\n\n  @Get()\n  async getAllBooks(@Query() query: ExpressQuery): Promise {\n    return this.bookService.findAll(query);\n  }\n\n  @Get(':_id')\n  async getBook(\n    @Param('_id')\n    _id: string,\n  ): Promise {\n    return this.bookService.findById(_id);\n  }\n\n  @Post()\n  @UseGuards(AuthGuard())\n  async createBook(\n    @Body()\n    book: CreateBookDto,\n  ): Promise {\n    return this.bookService.create(book);\n  }\n\n  @Put(':_id')\n  async updateBook(\n    @Param('_id')\n    _id: string,\n    @Body()\n    book: UpdateBookDto,\n  ): Promise {\n    return this.bookService.updateById(_id, book);\n  }\n\n  @Delete(':_id')\n  async deleteBook(\n    @Param('_id')\n    _id: string,\n  ): Promise {\n    return this.bookService.deleteById(_id);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/BookModule.html":{"url":"modules/BookModule.html","title":"module - BookModule","body":"\n                   \n\n\n\n\n    Modules\n    BookModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_BookModule\n\n\n\ncluster_BookModule_imports\n\n\n\ncluster_BookModule_providers\n\n\n\n\nAuthModule\n\nAuthModule\n\n\n\nBookModule\n\nBookModule\n\nBookModule -->\n\nAuthModule->BookModule\n\n\n\n\n\nBookService\n\nBookService\n\nBookModule -->\n\nBookService->BookModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/book/book.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            BookService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            BookController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AuthModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { BookController } from './book.controller';\nimport { BookService } from './book.service';\nimport { MongooseModule } from '@nestjs/mongoose';\nimport { BookSchema } from './schemas/book.schema';\nimport { AuthModule } from 'src/auth/auth.module';\n\n@Module({\n  imports: [\n    AuthModule,\n    MongooseModule.forFeature([{ name: 'Book', schema: BookSchema }]),\n  ],\n  controllers: [BookController],\n  providers: [BookService],\n})\nexport class BookModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/BookService.html":{"url":"injectables/BookService.html","title":"injectable - BookService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  BookService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/book/book.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                create\n                            \n                            \n                                    Async\n                                deleteById\n                            \n                            \n                                    Async\n                                findAll\n                            \n                            \n                                    Async\n                                findById\n                            \n                            \n                                    Async\n                                updateById\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(bookModel: mongoose.Model)\n                    \n                \n                        \n                            \n                                Defined in src/book/book.service.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        bookModel\n                                                  \n                                                        \n                                                                        mongoose.Model\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                    \n                    create(book: Book)\n                \n            \n\n\n            \n                \n                    Defined in src/book/book.service.ts:39\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    book\n                                    \n                                                Book\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        deleteById\n                        \n                    \n                \n            \n            \n                \n                    \n                    deleteById(_id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/book/book.service.ts:65\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    _id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findAll\n                        \n                    \n                \n            \n            \n                \n                    \n                    findAll(query: Query)\n                \n            \n\n\n            \n                \n                    Defined in src/book/book.service.ts:18\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    query\n                                    \n                                                Query\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findById\n                        \n                    \n                \n            \n            \n                \n                    \n                    findById(_id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/book/book.service.ts:44\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    _id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        updateById\n                        \n                    \n                \n            \n            \n                \n                    \n                    updateById(_id: string, book: Book)\n                \n            \n\n\n            \n                \n                    Defined in src/book/book.service.ts:58\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    _id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    book\n                                    \n                                                Book\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import {\n  BadRequestException,\n  Injectable,\n  NotFoundException,\n} from '@nestjs/common';\nimport { InjectModel } from '@nestjs/mongoose';\nimport { Book } from './schemas/book.schema';\nimport * as mongoose from 'mongoose';\nimport { Query } from 'express-serve-static-core';\n\n@Injectable()\nexport class BookService {\n  constructor(\n    @InjectModel(Book.name)\n    private bookModel: mongoose.Model,\n  ) {}\n\n  async findAll(query: Query): Promise {\n    const resPerPage = 2;\n    const currentPage = Number(query.page) || 1;\n    const skip = resPerPage * (currentPage - 1);\n\n    const keyword = query.keyword\n      ? {\n          title: {\n            $regex: query.keyword,\n            $options: 'i',\n          },\n        }\n      : {};\n\n    const books = await this.bookModel\n      .find({ ...keyword })\n      .limit(resPerPage)\n      .skip(skip);\n    return books;\n  }\n\n  async create(book: Book): Promise {\n    const res = await this.bookModel.create(book);\n    return res;\n  }\n\n  async findById(_id: string): Promise {\n    const isValidId = mongoose.isValidObjectId(_id);\n    if (!isValidId) {\n      throw new BadRequestException('Please enter the correct Id');\n    }\n\n    const book = await this.bookModel.findById(_id);\n\n    if (!book) {\n      throw new NotFoundException('Book not founded.');\n    }\n    return book;\n  }\n\n  async updateById(_id: string, book: Book): Promise {\n    return await this.bookModel.findByIdAndUpdate(_id, book, {\n      new: true,\n      runValidators: true,\n    });\n  }\n\n  async deleteById(_id: string): Promise {\n    return await this.bookModel.findByIdAndDelete(_id);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateBookDto.html":{"url":"classes/CreateBookDto.html","title":"class - CreateBookDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateBookDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/book/dto/create-book.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                author\n                            \n                            \n                                    Readonly\n                                category\n                            \n                            \n                                    Readonly\n                                description\n                            \n                            \n                                    Readonly\n                                price\n                            \n                            \n                                    Readonly\n                                title\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        author\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/book/dto/create-book.dto.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        category\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Category\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()@IsEnum(Category, {message: 'Please enter the correct category available'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/book/dto/create-book.dto.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        description\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/book/dto/create-book.dto.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        price\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()@IsNumber()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/book/dto/create-book.dto.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        title\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/book/dto/create-book.dto.ts:7\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsEnum, IsNotEmpty, IsNumber, IsString } from 'class-validator';\nimport { Category } from '../schemas/book.schema';\n\nexport class CreateBookDto {\n  @IsNotEmpty()\n  @IsString()\n  readonly title: string;\n\n  @IsNotEmpty()\n  @IsString()\n  readonly description: string;\n\n  @IsNotEmpty()\n  @IsString()\n  readonly author: string;\n\n  @IsNotEmpty()\n  @IsNumber()\n  readonly price: number;\n\n  @IsNotEmpty()\n  @IsEnum(Category, { message: 'Please enter the correct category available' })\n  readonly category: Category;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/JwtStrategy.html":{"url":"injectables/JwtStrategy.html","title":"injectable - JwtStrategy","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  JwtStrategy\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/jwt.strategy.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                validate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(userModel: Model)\n                    \n                \n                        \n                            \n                                Defined in src/auth/jwt.strategy.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        userModel\n                                                  \n                                                        \n                                                                        Model\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        validate\n                        \n                    \n                \n            \n            \n                \n                    \n                    validate(payload)\n                \n            \n\n\n            \n                \n                    Defined in src/auth/jwt.strategy.ts:20\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    payload\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, UnauthorizedException } from '@nestjs/common';\nimport { InjectModel } from '@nestjs/mongoose';\nimport { PassportStrategy } from '@nestjs/passport';\nimport { Strategy, ExtractJwt } from 'passport-jwt';\nimport { User } from './schemas/user.schema';\nimport { Model } from 'mongoose';\n\n@Injectable()\nexport class JwtStrategy extends PassportStrategy(Strategy) {\n  constructor(\n    @InjectModel(User.name)\n    private userModel: Model,\n  ) {\n    super({\n      jwtFromRequest: ExtractJwt.fromAuthHeaderAsBearerToken(),\n      secretOrKey: process.env.JWT_SECRET,\n    });\n  }\n\n  async validate(payload) {\n    const { id } = payload;\n    const user = await this.userModel.findById(id);\n    if (!user) {\n      throw new UnauthorizedException('Login first to access this endpoint');\n    }\n\n    return user;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/LoginDto.html":{"url":"classes/LoginDto.html","title":"class - LoginDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  LoginDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/dto/login.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                email\n                            \n                            \n                                    Readonly\n                                password\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()@IsEmail({}, {message: 'Please enter the correct email'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/auth/dto/login.dto.ts:6\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()@IsString()@MinLength(6)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/auth/dto/login.dto.ts:11\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsEmail, IsNotEmpty, MinLength, IsString } from 'class-validator';\n\nexport class LoginDto {\n  @IsNotEmpty()\n  @IsEmail({}, { message: 'Please enter the correct email' })\n  readonly email: string;\n\n  @IsNotEmpty()\n  @IsString()\n  @MinLength(6)\n  readonly password: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/SignUpDto.html":{"url":"classes/SignUpDto.html","title":"class - SignUpDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  SignUpDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/dto/signUp.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                email\n                            \n                            \n                                    Readonly\n                                name\n                            \n                            \n                                    Readonly\n                                password\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()@IsEmail({}, {message: 'Please enter the correct email'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/auth/dto/signUp.dto.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/auth/dto/signUp.dto.ts:6\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()@IsString()@MinLength(6)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/auth/dto/signUp.dto.ts:15\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsEmail, IsNotEmpty, IsString, MinLength } from 'class-validator';\n\nexport class SignUpDto {\n  @IsNotEmpty()\n  @IsString()\n  readonly name: string;\n\n  @IsNotEmpty()\n  @IsEmail({}, { message: 'Please enter the correct email' })\n  readonly email: string;\n\n  @IsNotEmpty()\n  @IsString()\n  @MinLength(6)\n  readonly password: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateBookDto.html":{"url":"classes/UpdateBookDto.html","title":"class - UpdateBookDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateBookDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/book/dto/update-book.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                author\n                            \n                            \n                                    Readonly\n                                category\n                            \n                            \n                                    Readonly\n                                description\n                            \n                            \n                                    Readonly\n                                price\n                            \n                            \n                                    Readonly\n                                title\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        author\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/book/dto/update-book.dto.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        category\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Category\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@IsEnum(Category, {message: 'Please enter the correct category available'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/book/dto/update-book.dto.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        description\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/book/dto/update-book.dto.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        price\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@IsNumber()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/book/dto/update-book.dto.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        title\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/book/dto/update-book.dto.ts:7\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsEnum, IsNumber, IsOptional, IsString } from 'class-validator';\nimport { Category } from '../schemas/book.schema';\n\nexport class UpdateBookDto {\n  @IsOptional()\n  @IsString()\n  readonly title: string;\n\n  @IsOptional()\n  @IsString()\n  readonly description: string;\n\n  @IsOptional()\n  @IsString()\n  readonly author: string;\n\n  @IsOptional()\n  @IsNumber()\n  readonly price: number;\n\n  @IsOptional()\n  @IsEnum(Category, { message: 'Please enter the correct category available' })\n  readonly category: Category;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/User.html":{"url":"classes/User.html","title":"class - User","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  User\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/schemas/user.schema.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                email\n                            \n                            \n                                name\n                            \n                            \n                                password\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({unique: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/auth/schemas/user.schema.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/auth/schemas/user.schema.ts:8\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/auth/schemas/user.schema.ts:14\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Schema, Prop, SchemaFactory } from '@nestjs/mongoose';\n\n@Schema({\n  timestamps: true,\n})\nexport class User {\n  @Prop()\n  name: string;\n\n  @Prop({ unique: [true, 'Email duplicated'] })\n  email: string;\n\n  @Prop()\n  password: string;\n}\n\nexport const userSchema = SchemaFactory.createForClass(User);\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/app.controller.ts\n            \n            controller\n            AppController\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app.service.ts\n            \n            injectable\n            AppService\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/auth/auth.controller.ts\n            \n            controller\n            AuthController\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/auth/auth.service.ts\n            \n            injectable\n            AuthService\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/auth/dto/login.dto.ts\n            \n            class\n            LoginDto\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/auth/dto/signUp.dto.ts\n            \n            class\n            SignUpDto\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/auth/jwt.strategy.ts\n            \n            injectable\n            JwtStrategy\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/auth/schemas/user.schema.ts\n            \n            class\n            User\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/auth/schemas/user.schema.ts\n            \n            variable\n            userSchema\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/book/book.controller.ts\n            \n            controller\n            BookController\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/book/book.service.ts\n            \n            injectable\n            BookService\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/book/dto/create-book.dto.ts\n            \n            class\n            CreateBookDto\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/book/dto/update-book.dto.ts\n            \n            class\n            UpdateBookDto\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/book/schemas/book.schema.ts\n            \n            class\n            Book\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/book/schemas/book.schema.ts\n            \n            variable\n            BookSchema\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/main.ts\n            \n            function\n            bootstrap\n            \n                0 %\n                (0/1)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @nestjs/common : ^9.0.0\n        \n            @nestjs/config : ^2.3.1\n        \n            @nestjs/core : ^9.0.0\n        \n            @nestjs/jwt : ^10.0.3\n        \n            @nestjs/mongoose : ^9.2.2\n        \n            @nestjs/passport : ^9.0.3\n        \n            @nestjs/platform-express : ^9.0.0\n        \n            bcryptjs : ^2.4.3\n        \n            class-transformer : ^0.5.1\n        \n            class-validator : ^0.14.0\n        \n            mongoose : ^7.1.0\n        \n            passport : ^0.6.0\n        \n            passport-jwt : ^4.0.1\n        \n            reflect-metadata : ^0.1.13\n        \n            rxjs : ^7.2.0\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/enumerations.html":{"url":"miscellaneous/enumerations.html","title":"miscellaneous-enumerations - enumerations","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Enumerations\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            Category   (src/.../book.schema.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/book/schemas/book.schema.ts\n    \n        \n            \n                \n                    \n                        \n                        Category\n                    \n                \n                        \n                            \n                                 ADVENTURE\n                            \n                        \n                        \n                            \n                                Value : Adventure\n                            \n                        \n                        \n                            \n                                 CLASSICS\n                            \n                        \n                        \n                            \n                                Value : Classic\n                            \n                        \n                        \n                            \n                                 CRIME\n                            \n                        \n                        \n                            \n                                Value : Crime\n                            \n                        \n                        \n                            \n                                 FANTASY\n                            \n                        \n                        \n                            \n                                Value : Fantasy\n                            \n                        \n            \n        \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            bootstrap   (src/.../main.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/main.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        bootstrap\n                        \n                    \n                \n            \n            \n                \nbootstrap()\n                \n            \n\n\n\n\n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\n\n  \n\n\n  A progressive Node.js framework for building efficient and scalable server-side applications.\n    \n\n\n\n\n\n\n\n\n  \n    \n  \n\n  \n\nDescription\nNest framework TypeScript starter repository.\nInstallation\n$ npm installRunning the app\n# development\n$ npm run start\n\n# watch mode\n$ npm run start:dev\n\n# production mode\n$ npm run start:prodTest\n# unit tests\n$ npm run test\n\n# e2e tests\n$ npm run test:e2e\n\n# test coverage\n$ npm run test:covSupport\nNest is an MIT-licensed open source project. It can grow thanks to the sponsors and support by the amazing backers. If you'd like to join them, please read more here.\nStay in touch\n\nAuthor - Kamil Myśliwiec\nWebsite - https://nestjs.com\nTwitter - @nestframework\n\nLicense\nNest is MIT licensed.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AuthModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        BookModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_providers\n\n\n\ncluster_AuthModule\n\n\n\ncluster_AuthModule_exports\n\n\n\ncluster_AuthModule_providers\n\n\n\ncluster_BookModule\n\n\n\ncluster_BookModule_providers\n\n\n\n\nAuthModule\n\nAuthModule\n\n\n\nBookModule\n\nBookModule\n\nBookModule -->\n\nAuthModule->BookModule\n\n\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAuthModule->AppModule\n\n\n\n\n\nJwtStrategy \n\nJwtStrategy \n\nJwtStrategy  -->\n\nAuthModule->JwtStrategy \n\n\n\nAppModule -->\n\nBookModule->AppModule\n\n\n\n\n\nAppService\n\nAppService\n\nAppModule -->\n\nAppService->AppModule\n\n\n\n\n\nAuthService\n\nAuthService\n\nAuthModule -->\n\nAuthService->AuthModule\n\n\n\n\n\nJwtStrategy\n\nJwtStrategy\n\nAuthModule -->\n\nJwtStrategy->AuthModule\n\n\n\n\n\nBookService\n\nBookService\n\nBookModule -->\n\nBookService->BookModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        3 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    3 Controllers\n                \n            \n        \n        \n            \n                \n                    \n                    4 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    6 Classes\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"properties.html":{"url":"properties.html","title":"package-properties - properties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Properties\n    \n    \n        \n            Version : 0.0.1\n        \n            Description : \n        \n            License : UNLICENSED\n        \n            Author : \n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            BookSchema   (src/.../book.schema.ts)\n                        \n                        \n                            userSchema   (src/.../user.schema.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/book/schemas/book.schema.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        BookSchema\n                        \n                    \n                \n            \n                \n                    \n                        Default value : SchemaFactory.createForClass(Book)\n                    \n                \n\n\n        \n    \n\n    src/auth/schemas/user.schema.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        userSchema\n                        \n                    \n                \n            \n                \n                    \n                        Default value : SchemaFactory.createForClass(User)\n                    \n                \n\n\n        \n    \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
